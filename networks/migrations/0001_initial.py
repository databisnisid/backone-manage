# Generated by Django 4.0.6 on 2022-08-17 10:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import networks.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('controllers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Networks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('network_id', models.CharField(max_length=50, unique=True, verbose_name='Network ID')),
                ('ip_address_networks', models.CharField(blank=True, help_text='Example: 192.168.0.0/24, 10.0.0.0/24', max_length=100, null=True, verbose_name='IP Networks')),
                ('configuration', models.TextField(blank=True, verbose_name='Configuration')),
                ('route', models.TextField(blank=True, verbose_name='Route')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('controller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controllers.controllers')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.organizations', verbose_name='Organization')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
                'db_table': 'networks',
            },
        ),
        migrations.CreateModel(
            name='NetworkRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('rules_definition', models.TextField(blank=True, default='\n# This is a default rule set that allows IPv4 and IPv6 traffic.\n# You can edit as needed. If your rule set gets large we recommend\n# cutting and pasting it somewhere to keep a backup.\n\n# Drop all Ethernet frame types that are not IPv4 or IPv6\ndrop\n\tnot ethertype 0x0800 # IPv4\n\tnot ethertype 0x0806 # IPv4 ARP\n\t#not ethertype 0x86dd # IPv6\n;\n\n# Capability: outgoing SSH\n#cap ssh\n#\tid 1000\n#\taccept\n#\t\tipprotocol tcp\n#\t\tdport 22\n#\t;\n#;\n\n# A tag indicating which department people belong to\n#tag department\n#\tid 1000\n#\tenum 100 sales\n#\tenum 200 marketing\n#\tenum 300 accounting\n#\tenum 400 engineering\n#;\n\n# Accept all traffic between members of the same department\n#accept\n#\ttdiff department 0\n#;\n\n# You can insert other drop, tee, etc. rules here. This rule\n# set ends with a blanket accept, making it permissive by\n# default.\n\naccept;\n', verbose_name='Network Rule Definition')),
                ('rules', models.TextField(blank=True, default='\n[\n   {\n    "type": "MATCH_ETHERTYPE",\n    "not": true,\n    "or": false,\n    "etherType": 2048\n   },\n   {\n    "type": "MATCH_ETHERTYPE",\n    "not": true,\n    "or": false,\n    "etherType": 2054\n   },\n   {\n    "type": "MATCH_ETHERTYPE",\n    "not": true,\n    "or": false,\n    "etherType": 34525\n   },\n   {\n    "type": "ACTION_DROP"\n   },\n   {\n    "type": "ACTION_ACCEPT"\n   }\n]\n', verbose_name='Network Rules')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('network', models.OneToOneField(limit_choices_to=networks.models.NetworkRules.limit_choices_to_current_user, on_delete=django.db.models.deletion.CASCADE, to='networks.networks', verbose_name='Network')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.organizations', verbose_name='Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'network rule',
                'verbose_name_plural': 'network rules',
                'db_table': 'network_rules',
            },
        ),
        migrations.CreateModel(
            name='NetworkRoutes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_network', models.CharField(help_text='Example: 192.168.0.0/24', max_length=50, verbose_name='IP Network')),
                ('gateway', models.GenericIPAddressField(null=True, verbose_name='Gateway')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('network', models.ForeignKey(limit_choices_to=networks.models.NetworkRoutes.limit_choices_to_current_user, on_delete=django.db.models.deletion.CASCADE, to='networks.networks', verbose_name='Network')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.organizations', verbose_name='Organization')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'network route',
                'verbose_name_plural': 'network routes',
                'db_table': 'network_routes',
            },
        ),
    ]
